<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        E9/pbXu7iClicYiLtGBxfH+gf//Z
</value>
  </data>
</root>